package com.Library.controllers;import com.Library.dtos.BookDTO;import com.Library.models.Book;import com.Library.service.BookService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.*;import reactor.core.publisher.Flux;import reactor.core.publisher.Mono;@RestController@RequestMapping("/books")public class BookController {  private final BookService bookService;  public BookController(@Autowired BookService bookService){    this.bookService= bookService;  }   @GetMapping("")   public ResponseEntity<Flux<BookDTO>> findAllBooks(){       return ResponseEntity.ok( bookService.findAllBooks());   }   @GetMapping("/{id}")   public BookDTO findOneBook(@PathVariable("id") Long bookId) throws Exception {      return  bookService.findOneBook(bookId);   }   @PostMapping("")   public ResponseEntity<BookDTO>  saveSingleBook(@RequestBody @Validated BookDTO bookDTO) throws Exception {     return ResponseEntity.ok( bookService.saveSingleBook(bookDTO) );   }   @PutMapping("/{id}")   public ResponseEntity<Mono<BookDTO>> editSingleBook(@RequestBody @Validated BookDTO bookDTO , @PathVariable("id") Long bookId ) throws Exception {     return ResponseEntity.ok(Mono.justOrEmpty( bookService.editSingleBook(bookDTO , bookId)));  }  @DeleteMapping("/{id}")  public  void deleteSingleBook(@PathVariable("id") Long bookId) throws Exception {    bookService.deleteSingleBook(bookId);  }}